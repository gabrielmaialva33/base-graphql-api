version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: base-graphql-api
    restart: 'always'
    command: sh -c "yarn db:reset && yarn start"
    ports:
      - '4000:4000'
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      PORT: ${PORT}
      HOST: ${HOST}
      NODE_ENV: ${NODE_ENV}
      APP_KEY: ${APP_KEY}
      PG_HOST: postgres
      PG_PORT: ${PG_PORT}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB_NAME: ${PG_DB_NAME}
      PG_DB_DEBUG: ${PG_DB_DEBUG}
      PG_SSL: ${PG_SSL}
      PG_POOL_MIN: ${PG_POOL_MIN}
      PG_POOL_MAX: ${PG_POOL_MAX}
    networks:
      - app-network
  postgres:
    image: postgres:latest
    container_name: base-graphql-postgres
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'postgres', '-U', 'postgres']
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    expose:
      - 5432
    volumes:
      - database:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  database:
